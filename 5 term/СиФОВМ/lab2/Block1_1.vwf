/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 20000.0;
	SIMULATION_TIME = 20000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk_d")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D_ca")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D_ca[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("D_ca[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D_ca";
}

SIGNAL("QA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("QB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("QC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("QD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LDN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("A")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("C")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("D")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("clk_d")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 305.0;
		NODE
		{
			REPEAT = 21;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 400.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 295.0;
	}
}

TRANSITION_LIST("clk_in")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 221;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 25.0;
	}
}

TRANSITION_LIST("D_ca[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 12905.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 6195.0;
	}
}

TRANSITION_LIST("D_ca[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 12005.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 7095.0;
	}
}

TRANSITION_LIST("D_ca[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 11105.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 7995.0;
	}
}

TRANSITION_LIST("D_ca[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10205.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 8895.0;
	}
}

TRANSITION_LIST("D_ca[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 9305.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 9795.0;
	}
}

TRANSITION_LIST("D_ca[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 8405.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 10695.0;
	}
}

TRANSITION_LIST("D_ca[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 7505.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 11595.0;
	}
}

TRANSITION_LIST("D_ca[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 6605.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 12495.0;
	}
}

TRANSITION_LIST("D_ca[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5705.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 13395.0;
	}
}

TRANSITION_LIST("D_ca[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4805.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 13500.0;
		LEVEL 0 FOR 795.0;
	}
}

TRANSITION_LIST("D_ca[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3905.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 13500.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 795.0;
	}
}

TRANSITION_LIST("D_ca[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3005.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 13500.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 1695.0;
	}
}

TRANSITION_LIST("D_ca[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2105.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 13500.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 2595.0;
	}
}

TRANSITION_LIST("D_ca[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1205.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 13500.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 3495.0;
	}
}

TRANSITION_LIST("D_ca[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 305.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 13500.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 4395.0;
	}
}

TRANSITION_LIST("D_ca[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 305.0;
		LEVEL 1 FOR 13500.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 5295.0;
	}
}

TRANSITION_LIST("QA")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 18245.0;
	}
}

TRANSITION_LIST("QB")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 810.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 18245.0;
	}
}

TRANSITION_LIST("QC")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 115.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1160.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 18245.0;
	}
}

TRANSITION_LIST("QD")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 155.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1190.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 18245.0;
	}
}

TRANSITION_LIST("LDN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 1120.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18240.0;
	}
}

TRANSITION_LIST("A")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 18920.0;
	}
}

TRANSITION_LIST("B")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 19520.0;
	}
}

TRANSITION_LIST("C")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("D")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_d";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D_ca[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "QA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "QB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "QC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "QD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LDN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "C";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 845000;
	MASTER = TRUE;
}
;
